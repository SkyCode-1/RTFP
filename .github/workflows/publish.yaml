name: Publish # Название скрипта в GitHub
on:
  push:
    branches:
      - main # Для какой ветки работает скрипт

concurrency: ${{ github.workflow }}-${{ github.ref }} # Защита от множественных пушей, гитхаб отменит старые пуши и оставит последний

permissions:
  contents: write # Пуш коммитов
  pull-requests: write # Создание пулл реквестов
  packages: write # Публикация в гитхаб
  id-token: write # OIDC авторизация

jobs:
  publish:
    runs-on: ubuntu-latest # Выполнение на ubuntu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0       # нужно, чтобы пушить новые коммиты
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run Changeset Check Script
        id: check_changes
        run: ./scripts/check-changeset.sh

      - name: Update version
        if: steps.check_changes.outputs.SHOULD_PUBLISH == 'true'
        run: npx changeset version

      - name: Build
        run: npm run build

      - name: Commit version bump
        if: steps.check_changes.outputs.SHOULD_PUBLISH == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add package.json CHANGELOG.md .changeset/
          git commit -m "chore: bump version via changesets [skip ci]" || echo "No changes to commit"
          git push

      - name: Create Git tag
        if: steps.check_changes.outputs.SHOULD_PUBLISH == 'true'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git tag v$VERSION
          git push origin v$VERSION

      - name: Publish
        if: steps.check_changes.outputs.SHOULD_PUBLISH == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}